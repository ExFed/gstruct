plugins {
    id 'base'
    id 'idea'
    id 'jacoco'
}

group 'com.columnzero.gstruct'
version '0.1'

allprojects {
    repositories {
        jcenter()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    test {
        useJUnitPlatform()

        testLogging.showStandardStreams true

        // show test summary (adapted from https://gist.github.com/orip/4951642)
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                testLogging.lifecycle.println "$result.resultType " +
                        "($result.testCount tests," +
                        " $result.successfulTestCount successful," +
                        " $result.failedTestCount failed," +
                        " $result.skippedTestCount skipped)"
            }
        }
    }

    rootProject.check.dependsOn test
}

task jacocoMerge(type: JacocoMerge) {
    subprojects.each {
        executionData it.tasks.withType(Test)
    }
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

task jacocoRootReport(type: JacocoReport) {
    group = 'Verification'
    description = 'Generates an aggregate report from all subprojects'
    dependsOn subprojects.test, jacocoMerge

    additionalSourceDirs.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.from = files(subprojects.sourceSets.main.output)
    executionData.from = jacocoMerge.destinationFile

    reports {
        html.enabled = true
        html.destination = file("$buildDir/reports/jacoco/html")
        xml.enabled = true
        xml.destination = file("$buildDir/reports/jacoco/report.xml")
    }
}
